<UserControl x:Class="VSRAD.Package.ProjectSystem.Macros.MacroListEditor"
             x:Name="Root"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dat="clr-namespace:System.Windows.Data;assembly=PresentationFramework"
             xmlns:local="clr-namespace:VSRAD.Package.ProjectSystem.Macros"
             xmlns:profiles="clr-namespace:VSRAD.Package.ProjectSystem.Profiles"
             xmlns:utils="clr-namespace:VSRAD.Package.Utils"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <d:DesignerProperties.DesignStyle>
        <Style TargetType="UserControl">
            <Setter Property="Background" Value="White"/>
        </Style>
    </d:DesignerProperties.DesignStyle>
    <d:UserControl.DataContext>
        <local:MacroListDesignTimeCollection />
    </d:UserControl.DataContext>
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../../ToolWindows/ControlStyle.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <CollectionViewSource Source="{Binding}" Filter="FilterMacros" x:Name="MacroCollectionView" x:Key="Macros">
                <CollectionViewSource.GroupDescriptions>
                    <dat:PropertyGroupDescription PropertyName="IsUserDefined"/>
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>
            <utils:WpfBoolToStringConverter x:Key="MacroUserDefinedLabelConverter" TrueValue="Custom" FalseValue="Predefined" />
            <utils:WpfBoolToVisibilityConverter x:Key="MacroUserDefinedVisibilityConverter" TrueValue="Visible" FalseValue="Collapsed" />
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="28"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <DockPanel>
            <Label Content="Search macros:"/>
            <TextBox Height="22" VerticalContentAlignment="Center" HorizontalAlignment="Stretch"
                     ToolTip="Filter available macros by their name or value (case-insensitive)"
                     Text="{Binding MacroFilter, ElementName=Root, UpdateSourceTrigger=PropertyChanged}"/>
        </DockPanel>
        <DataGrid x:Name="MacroGrid" ItemsSource="{Binding Source={StaticResource Macros}}" GridLinesVisibility="None"
                  AutoGenerateColumns="False" CanUserAddRows="False" CanUserReorderColumns="False" CanUserResizeRows="False"
                  HeadersVisibility="Column" HorizontalScrollBarVisibility="Disabled" Grid.Row="1" RowHeight="24">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Macro" Binding="{Binding Name, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="{x:Type TextBlock}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0" />
                            <Setter Property="Height" Value="22" />
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0" />
                            <Setter Property="Height" Value="22" />
                            <Style.Triggers>
                                <Trigger Property="Validation.HasError" Value="true">
                                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="*">
                    <DataGridTextColumn.ElementStyle>
                        <Style TargetType="TextBlock">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0" />
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                    <DataGridTextColumn.EditingElementStyle>
                        <Style TargetType="{x:Type TextBox}">
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Padding" Value="6,0" />
                            <Setter Property="Height" Value="22" />
                        </Style>
                    </DataGridTextColumn.EditingElementStyle>
                </DataGridTextColumn>
                <DataGridTemplateColumn Header="" Width="52">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="4,0,0,2">
                                <StackPanel.Resources>
                                    <Style x:Key="RowButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsUserDefined}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Resources>
                                <Button Content="✍" Command="{Binding RichEditCommand, ElementName=Root}" CommandParameter="{Binding}" Width="22" Height="22" Margin="0,0,2,0"
                                        ToolTip="Edit value" Style="{StaticResource RowButtonStyle}" />
                                <Button Content="❌" Command="{Binding DeleteMacroCommand, ElementName=Root}" CommandParameter="{Binding}" Width="22" Height="22" Margin="0"
                                        ToolTip="Delete" Style="{StaticResource RowButtonStyle}" />
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
            </DataGrid.Columns>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="IsEnabled" Value="{Binding IsUserDefined, Mode=OneWay}" />
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <profiles:ExtendedExpander IsExpanded="{Binding Name, Mode=OneTime}">
                                            <profiles:ExtendedExpander.HeaderMainContent>
                                                <Label Content="{Binding Name, Converter={StaticResource MacroUserDefinedLabelConverter}}" />
                                            </profiles:ExtendedExpander.HeaderMainContent>
                                            <profiles:ExtendedExpander.HeaderSideContent>
                                                <Button Content="➕" Width="22" Height="22" ToolTip="Add macro"
                                                        Command="{Binding AddMacroCommand, ElementName=Root}"
                                                        Visibility="{Binding Name, Converter={StaticResource MacroUserDefinedVisibilityConverter}}" />
                                            </profiles:ExtendedExpander.HeaderSideContent>
                                            <ItemsPresenter />
                                        </profiles:ExtendedExpander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
        </DataGrid>
    </Grid>
</UserControl>
